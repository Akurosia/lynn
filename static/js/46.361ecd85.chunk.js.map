{"version":3,"file":"static/js/46.361ecd85.chunk.js","mappings":"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","sources":["map/tooltipcomponents/EurekaNMTooltipComponent.jsx","map/tooltipcomponents/AetheryteTooltipComponent.jsx","map/tooltipcomponents/BozjaCETooltipComponent.jsx","map/TooltipBaseComponent.jsx","map/FullscreenMapComponent.jsx","map/MapLayerSelectorComponent.jsx","map/MapZoneSelectorComponent.jsx","map/MapContainerComponent.jsx"],"sourcesContent":["import Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport React from 'react';\n\nexport default function EurekaNMTooltipComponent({ markerData }) {\n  const renderSpawnedBy = () => {\n    if (markerData.metadata.spawnedBy) {\n      return (\n        <Stack direction=\"row\" alignItems=\"center\">\n          <Box>\n            <img\n              src={`${process.env.PUBLIC_URL}/assets/eureka/eureka_${markerData.metadata.spawnedBy.element.toLowerCase()}.png`}\n              alt={markerData.name}\n              width=\"32px\"\n              height=\"32px\"\n            />\n          </Box>\n          <Typography variant=\"button\">{`Lv${markerData.metadata.spawnedBy.level} ${markerData.metadata.spawnedBy.name}`}</Typography>\n        </Stack>\n      );\n    }\n    return null;\n  };\n\n  return (\n    <Stack>\n      <Typography variant=\"h6\">Notorious Monster</Typography>\n      <Stack direction=\"row\" alignItems=\"center\">\n        <Box>\n          <img\n            src={`${process.env.PUBLIC_URL}/assets/eureka/eureka_${markerData.metadata.element.toLowerCase()}.png`}\n            alt={markerData.name}\n            width=\"32px\"\n            height=\"32px\"\n          />\n        </Box>\n        <Typography variant=\"button\">{markerData.name}</Typography>\n      </Stack>\n      {markerData.metadata.spawnedBy ? <Typography variant=\"h6\">Spawned by</Typography> : null}\n      {renderSpawnedBy()}\n    </Stack>\n  );\n}\n","import Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport React from 'react';\n\nexport default function AetheryteTooltipComponent({ markerData }) {\n  if (markerData.metadata?.unlock) {\n    return (\n      <Stack>\n        <Typography variant=\"h6\">Unlocks at</Typography>\n        <Typography variant=\"button\">{`Level ${markerData.metadata.unlock}`}</Typography>\n      </Stack>\n    );\n  }\n\n  return null;\n}\n","import Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport React from 'react';\n\nexport default function BozjaCETooltipComponent({ markerData }) {\n  const renderSpawnedBy = () => {\n    if (markerData.metadata.spawnedBy) {\n      return (\n        <Stack direction=\"row\" alignItems=\"center\">\n          <Box>\n            <img\n              src={`${process.env.PUBLIC_URL}/assets/maps/markers/${markerData.metadata.spawnedBy.type}.png`}\n              alt={markerData.metadata.spawnedBy.type}\n              width=\"32px\"\n              height=\"32px\"\n            />\n          </Box>\n          <Typography variant=\"button\">{markerData.metadata.spawnedBy.name}</Typography>\n        </Stack>\n      );\n    }\n    return null;\n  };\n\n  const renderRewards = () => {\n    if (markerData.metadata.rewards) {\n      return markerData.metadata.rewards.map((reward) => (\n        <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\n          <Box>\n            <img\n              src={`${process.env.PUBLIC_URL}/assets/maps/markers/${reward.type}.png`}\n              alt={reward.type}\n              width=\"32px\"\n              height=\"32px\"\n            />\n          </Box>\n          <Typography variant=\"button\">{reward.name}</Typography>\n        </Stack>\n      ));\n    }\n    return null;\n  };\n\n  return (\n    <Stack>\n      <Typography variant=\"h6\">Critical Engagement</Typography>\n      <Typography variant=\"h6\">Boss</Typography>\n      <Typography variant=\"button\">{markerData.metadata.boss}</Typography>\n      {markerData.metadata.spawnedBy ? <Typography variant=\"h6\">Spawned by</Typography> : null}\n      {renderSpawnedBy()}\n      {markerData.metadata.rewards ? <Typography variant=\"h6\">Rewards</Typography> : null}\n      {renderRewards()}\n    </Stack>\n  );\n}\n","import Box from '@mui/material/Box';\nimport Divider from '@mui/material/Divider';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport React from 'react';\nimport EurekaNMTooltipComponent from './tooltipcomponents/EurekaNMTooltipComponent';\nimport AetheryteTooltipComponent from './tooltipcomponents/AetheryteTooltipComponent';\nimport BozjaCETooltipComponent from './tooltipcomponents/BozjaCETooltipComponent';\n\nexport default function TooltipBaseComponent(\n  {\n    markerData,\n    icon,\n    type,\n  },\n) {\n  const renderContent = () => {\n    switch (type) {\n      case 'nms':\n        return <EurekaNMTooltipComponent markerData={markerData} />;\n      case 'aetherytes':\n        return <AetheryteTooltipComponent markerData={markerData} />;\n      case 'criticalEngagements':\n        return <BozjaCETooltipComponent markerData={markerData} />;\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <Box className=\"tooltip-base-component\">\n      <Stack width=\"300px\">\n        <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\n          <Box>\n            <img\n              src={`${process.env.PUBLIC_URL}/assets/maps/markers/${icon}`}\n              alt={icon}\n              width=\"48px\"\n              height=\"48px\"\n            />\n          </Box>\n          <Typography fontWeight={700} variant=\"h6\">\n            {markerData.popupTitle ?? markerData.name}\n          </Typography>\n        </Stack>\n        <Box my={1}>\n          <Divider variant=\"middle\" light sx={{ bgcolor: '#999', mb: 1 }} />\n        </Box>\n        {renderContent(markerData.type, markerData, icon)}\n      </Stack>\n    </Box>\n  );\n}\n","import React, { useRef, useState } from 'react';\n\nimport 'leaflet/dist/leaflet.css';\nimport {\n  Circle,\n  ImageOverlay,\n  MapContainer,\n  Marker,\n  Polygon,\n  Polyline,\n  Popup,\n  Tooltip,\n  useMapEvents,\n} from 'react-leaflet';\nimport L from 'leaflet';\nimport TooltipBaseComponent from './TooltipBaseComponent';\nimport PolygonDrawingComponent from './PolygonDrawingComponent';\nimport PolygonCoordinatesDisplay from './PolygonCoordinatesDisplay';\n\n// Hack to support leaflet, see https://github.com/PaulLeCam/react-leaflet/issues/255\n/* eslint-disable no-underscore-dangle, global-require, comma-dangle */\ndelete L.Icon.Default.prototype._getIconUrl;\n\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\n/* eslint-enable no-underscore-dangle, global-require, comma-dangle */\n\nfunction PopupHelper({ markerRef }) {\n  React.useEffect(() => {\n    if (markerRef?.current) {\n      // Small timeout to ensure marker is fully initialized\n      // There has to be a better way to do this...\n      setTimeout(() => {\n        if (markerRef.current) {\n          markerRef.current.openPopup();\n        }\n      }, 100);\n    }\n  }, [markerRef]);\n  return null;\n}\n\nfunction LocationMarker({ handleMouseMove }) {\n  const map = useMapEvents({\n    mousemove: (e) => {\n      handleMouseMove(e);\n    },\n    moveend: () => {\n      const center = map.getCenter();\n      const zoom = map.getZoom();\n\n      const params = new URLSearchParams(window.location.search);\n      params.set('x', center.lng.toFixed(2));\n      params.set('y', center.lat.toFixed(2));\n      params.set('zoom', zoom.toFixed(1));\n\n      const newUrl = `${window.location.pathname}?${params.toString()}`;\n      window.history.pushState({ path: newUrl }, '', newUrl);\n    },\n    zoomend: () => {\n      const center = map.getCenter();\n      const zoom = map.getZoom();\n\n      const params = new URLSearchParams(window.location.search);\n      params.set('x', center.lng.toFixed(2));\n      params.set('y', center.lat.toFixed(2));\n      params.set('zoom', zoom.toFixed(1));\n\n      const newUrl = `${window.location.pathname}?${params.toString()}`;\n      window.history.pushState({ path: newUrl }, '', newUrl);\n    },\n    popupopen: (e) => {\n      // Push popup id to query params\n      const params = new URLSearchParams(window.location.search);\n      params.set('poi', e.popup.options.id);\n\n      const newUrl = `${window.location.pathname}?${params.toString()}`;\n      window.history.pushState({ path: newUrl }, '', newUrl);\n    },\n    popupclose: () => {\n      // Remove popup id from query params\n      const params = new URLSearchParams(window.location.search);\n      params.delete('poi');\n\n      const newUrl = `${window.location.pathname}?${params.toString()}`;\n      window.history.pushState({ path: newUrl }, '', newUrl);\n    },\n  });\n\n  return null;\n}\n\nexport default function FullscreenMapComponent({\n  mapData,\n  mapParameters,\n  displayLabels,\n  selectedLayers,\n  handleMouseMove,\n  initialMapPosition,\n}) {\n  const markers = [];\n  const annotations = [];\n  const markerRef = useRef(null);\n\n  const shouldDisplayPolygonDrawingComponent = false;\n\n  // State for polygon drawing\n  const [polygonCoordinates, setPolygonCoordinates] = useState(null);\n\n  // Handle when polygon drawing is complete\n  const handlePolygonComplete = (vertices) => {\n    setPolygonCoordinates(vertices);\n  };\n\n  // Close the coordinates display\n  const handleCloseCoordinates = () => {\n    setPolygonCoordinates(null);\n  };\n\n  // Add all json markers to a flat markers array to display on the map\n  Object.keys(mapData).forEach((markerType) => {\n    if (selectedLayers.includes(markerType)) {\n      // Push all markers of this type to the markers array\n      /**\n       * Most options for these markers are set in the map's json file.\n       * - markerIcon: The icon image displayed. Can be overridden for a specific marker with\n       *     iconOverride.\n       * - circle: If present, draws a circle around the marker.\n       *     (e.g. FATE/Skirmish/CE/NM boundaries)\n       * - position: Corresponds to the x/y values in-game. Since we're using leaflet (and have\n       *     to pretend that we're using latitude/longitude values), the y value needs to be\n       *     provided as negative.\n       *\n       * TODO: Eventually we'll add support for actual tooltips, but for now it just shows\n       *   the marker's name.\n       * NOTE: For region names, the marker will be slightly offset due to lacking an icon.\n       */\n      markers.push(...(mapData[markerType].waymarks.map((marker) => (\n        <Marker\n          key={marker['@id']}\n          position={[marker.position.y, marker.position.x]}\n          ref={marker['@id'] === initialMapPosition?.poi ? markerRef : null}\n          icon={\n            L.icon({\n              iconUrl: `${process.env.PUBLIC_URL}/assets/maps/markers/${\n                marker.iconOverride ? marker.iconOverride : mapData[markerType].markerIcon\n              }`,\n              iconSize: [32, 32],\n              iconAnchor: [16, 16],\n              popupAnchor: [0, -8],\n              tooltipAnchor: [4, 0],\n            })\n          }\n        >\n          <Popup m={0} id={marker['@id']}>\n            <TooltipBaseComponent\n              markerData={marker}\n              icon={marker.iconOverride ? marker.iconOverride : mapData[markerType].markerIcon}\n              type={markerType}\n            />\n          </Popup>\n          <Tooltip permanent>\n            {displayLabels ? marker.name : ''}\n          </Tooltip>\n          {\n            mapData[markerType].circle && (\n              <Circle\n                center={[marker.position.y, marker.position.x]}\n                pathOptions={{\n                  color: mapData[markerType].circle.color,\n                  fillColor: mapData[markerType].circle.color,\n                  fillOpacity: 0.2,\n                  dashArray: '4, 4',\n                }}\n                radius={mapData[markerType].circle.radius}\n              />\n            )\n          }\n        </Marker>\n      ))));\n\n      /**\n       * Add annotations, if they exist. These are things drawn on the map that aren't associated\n       * with a specific marker.\n       */\n      if (mapData[markerType].annotations) {\n        annotations.push(...mapData[markerType].annotations.map((annotation) => {\n          switch (annotation.type) {\n            case 'polyline':\n              return (\n                <Polyline\n                  key={annotation['@id']}\n                  pathOptions={{\n                    color: '#fff',\n                    fillColor: '#fff',\n                    fillOpacity: 0.2,\n                    dashArray: '4, 12',\n                  }}\n                  positions={annotation.path.map((point) => (\n                    [point.y, point.x]\n                  ))}\n                />\n              );\n            case 'largeText':\n              // TODO: Adjust font size with zoom. Or make these images, maybe?\n              return (\n                <Marker\n                  key={annotation['@id']}\n                  position={[annotation.position.y, annotation.position.x]}\n                  icon={L.divIcon({\n                    className: 'large-text',\n                    html: `<div style=\"font-size:48pt;font-weight:bold;\">${annotation.text}</div>`,\n                    iconSize: [0, 0],\n                    iconAnchor: [0, 0],\n                    popupAnchor: [0, 0],\n                    tooltipAnchor: [0, 0],\n                  })}\n                />\n              );\n            case 'polygon':\n              return (\n                <Polygon\n                  key={annotation['@id']}\n                  pathOptions={{\n                    fillColor: annotation.color,\n                    color: annotation.color,\n                    fillOpacity: 0.2,\n                  }}\n                  positions={annotation.path.map((point) => [point[1], point[0]])}\n                >\n                  <Popup m={0} id={annotation['@id']}>\n                    <TooltipBaseComponent\n                      markerData={annotation.popup}\n                      type={markerType}\n                      icon={annotation.popup.icon}\n                    />\n                  </Popup>\n                </Polygon>\n              );\n            default:\n              return null;\n          }\n        }));\n      }\n    }\n  });\n\n  const initialMapSettings = {\n    lat: initialMapPosition?.lat || mapParameters.center.lat,\n    lon: initialMapPosition?.lon || mapParameters.center.lon,\n    zoom: initialMapPosition?.zoom || mapParameters.zoom.default,\n  };\n\n  return (\n    <MapContainer\n      className=\"full-screen-map\"\n      crs={L.CRS.Simple}\n      center={[initialMapSettings.lat, initialMapSettings.lon]}\n      zoom={initialMapSettings.zoom}\n      minZoom={mapParameters.zoom.min}\n      maxZoom={mapParameters.zoom.max}\n      zoomDelta={mapParameters.zoom.delta}\n      zoomSnap={mapParameters.zoom.snap}\n      wheelPxPerZoomLevel={mapParameters.zoom.scrollPx}\n    >\n      <PopupHelper markerRef={markerRef} />\n      <LocationMarker handleMouseMove={handleMouseMove} />\n      <ImageOverlay\n        url={`${process.env.PUBLIC_URL}/assets/maps/${mapParameters.imageUrl}`}\n        noWrap\n        bounds={\n          [\n            [mapParameters.bounds.min.lat,\n              mapParameters.bounds.min.lon,\n            ], [\n              mapParameters.bounds.max.lat,\n              mapParameters.bounds.max.lon,\n            ],\n          ]\n        }\n      />\n      {markers}\n      {annotations}\n      {shouldDisplayPolygonDrawingComponent\n        ? <PolygonDrawingComponent onPolygonComplete={handlePolygonComplete} />\n        : null}\n      {shouldDisplayPolygonDrawingComponent\n        ? (\n          <PolygonCoordinatesDisplay\n            coordinates={polygonCoordinates}\n            onClose={handleCloseCoordinates}\n          />\n        )\n        : null}\n\n    </MapContainer>\n  );\n}\n","import Box from '@mui/material/Box';\nimport Checkbox from '@mui/material/Checkbox';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormGroup from '@mui/material/FormGroup';\nimport Typography from '@mui/material/Typography';\nimport { useTheme } from '@mui/material/styles';\nimport React from 'react';\nimport Scrollbars from 'react-custom-scrollbars-2';\n\nexport default function MapLayerSelectorComponent({\n  selectedLayers,\n  availableLayers,\n  handleLayerSelectorUpdate,\n}) {\n  const theme = useTheme();\n\n  const checkboxesToDisplay = [];\n\n  // TODO: Fix this error.\n  // eslint-disable-next-line no-restricted-syntax\n  for (const category of availableLayers) {\n    // Push parent checkbox\n    checkboxesToDisplay.push(\n      <FormControlLabel\n        label={<Typography fontWeight={700}>{category.name}</Typography>}\n        key={category.name}\n        control={\n          (\n            <Checkbox\n              checked={category.layers.every((layer) => selectedLayers.includes(layer.id))}\n              indeterminate={\n                category.layers.some((layer) => selectedLayers.includes(layer.id))\n                && !category.layers.every((layer) => selectedLayers.includes(layer.id))\n              }\n              disabled={!category.enabled}\n            />\n          )\n        }\n        onChange={(e) => {\n          // TODO: This doesn't work yet, need to see why\n          const newLayers = [...selectedLayers];\n          if (e.target.checked) {\n            category.layers.forEach((layer) => {\n              if (!newLayers.includes(layer.id)) {\n                newLayers.push(layer.id);\n              }\n            });\n          } else {\n            category.layers.forEach((layer) => {\n              const index = newLayers.indexOf(layer.id);\n              if (index > -1) {\n                newLayers.splice(index, 1);\n              }\n            });\n          }\n          handleLayerSelectorUpdate(newLayers);\n        }}\n      />,\n    );\n\n    // Push child checkboxes\n    const categoryLayers = category.layers.map((layer) => (\n      <FormControlLabel\n        key={layer.name}\n        control={\n          (\n            <Checkbox\n              checked={selectedLayers.includes(layer.id)}\n              disabled={!layer.enabled}\n            />\n          )\n        }\n        label={layer.name}\n        onChange={(e) => {\n          const newLayers = [...selectedLayers];\n          if (e.target.checked) {\n            newLayers.push(layer.id);\n          } else {\n            const index = newLayers.indexOf(layer.id);\n            if (index > -1) {\n              newLayers.splice(index, 1);\n            }\n          }\n          handleLayerSelectorUpdate(newLayers);\n        }}\n      />\n    ));\n\n    checkboxesToDisplay.push(\n      <Box sx={{ display: 'flex', flexDirection: 'column', ml: 3 }}>\n        {categoryLayers}\n      </Box>,\n    );\n  }\n\n  /**\n   * TODO: For xs-s, the selector should be a popover modal\n   */\n\n  return (\n    <Box\n      className=\"map-layer-selector\"\n      sx={{\n        mt: { xs: 4, md: 0 },\n        height: { xs: 'calc(80dvh - 112px)', md: 'calc(80dvh - 32px)' },\n        top: { xs: '40px', md: '80px' },\n        backgroundColor: theme.palette.background.paper,\n      }}\n    >\n      <Scrollbars universal>\n        <FormGroup>\n          {checkboxesToDisplay}\n        </FormGroup>\n      </Scrollbars>\n    </Box>\n  );\n}\n","import Box from '@mui/material/Box';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormLabel from '@mui/material/FormLabel';\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport useTheme from '@mui/material/styles/useTheme';\nimport React from 'react';\nimport Scrollbars from 'react-custom-scrollbars-2';\n\nexport default function MapZoneSelectorComponent({\n  currentZone,\n  handleZoneSelectorUpdate,\n}) {\n  const theme = useTheme();\n  return (\n    <Box\n      className=\"map-zone-selector\"\n      sx={{\n        mt: { xs: 4, md: 0 },\n        height: { xs: 'calc(80dvh - 112px)', md: 'calc(80dvh - 32px)' },\n        top: { xs: '40px', md: '80px' },\n        backgroundColor: theme.palette.background.paper,\n      }}\n    >\n      <Scrollbars universal>\n        <FormGroup>\n          <RadioGroup\n            value={currentZone}\n            onChange={(e) => handleZoneSelectorUpdate(e.target.value)}\n          >\n            <FormLabel>Occult Crescent</FormLabel>\n            <FormControlLabel value=\"southhorn\" control={<Radio />} label=\"South Horn\" />\n            <FormLabel>Bozja</FormLabel>\n            <FormControlLabel value=\"zadnor\" control={<Radio disabled />} label=\"Zadnor\" />\n            <FormControlLabel value=\"bsf\" control={<Radio />} label=\"The Bozjan Southern Front\" />\n            <FormLabel>Eureka</FormLabel>\n            <FormControlLabel value=\"hydatos\" control={<Radio />} label=\"Eureka Hydatos\" />\n            <FormControlLabel value=\"pyros\" control={<Radio disabled />} label=\"Eureka Pyros\" />\n            <FormControlLabel value=\"pagos\" control={<Radio disabled />} label=\"Eureka Pagos\" />\n            <FormControlLabel value=\"anemos\" control={<Radio disabled />} label=\"Eureka Anemos\" />\n          </RadioGroup>\n        </FormGroup>\n      </Scrollbars>\n    </Box>\n  );\n}\n","import React, { useCallback, useMemo } from 'react';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Fab from '@mui/material/Fab';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport { useTheme } from '@mui/material/styles';\nimport LayersIcon from '@mui/icons-material/Layers';\nimport MapIcon from '@mui/icons-material/Map';\nimport ExpandLessIcon from '@mui/icons-material/ExpandLess';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\nimport CheckBoxOutlineBlankIcon from '@mui/icons-material/CheckBoxOutlineBlank';\nimport AbcIcon from '@mui/icons-material/Abc';\nimport InfoIcon from '@mui/icons-material/Info';\nimport CancelIcon from '@mui/icons-material/Cancel';\nimport './MapContainerComponent.css';\n\nimport FullscreenMapComponent from './FullscreenMapComponent';\nimport MapLayerSelectorComponent from './MapLayerSelectorComponent';\n\n// TODO: Attempt to lazy-load these\nimport bsfMapData from './lib/poi/bsf.json';\nimport hydMapData from './lib/poi/hydatos.json';\nimport oshMapData from './lib/poi/southhorn.json';\nimport MapZoneSelectorComponent from './MapZoneSelectorComponent';\nimport FooterComponent from '../FooterComponent';\n// import MapData from './MapData';\n\nexport default function MapContainerComponent({ mapId, inputSelectedLayers }) {\n  const theme = useTheme();\n\n  // TODO: Have a mapping so we can use multiple identifiers for each zone\n  const mapData = {};\n  mapData.hydatos = hydMapData;\n  mapData.bsf = bsfMapData;\n  mapData.southhorn = oshMapData;\n\n  // const mapDataManager = MapData.getInstance();\n\n  const [selectedMapId, setSelectedMapId] = React.useState(mapId ?? 'hydatos');\n\n  const initialSelectedLayers = inputSelectedLayers\n    ?? mapData[selectedMapId].layers.map((layer) => layer.id);\n  const [selectedLayers, setSelectedLayers] = React.useState(initialSelectedLayers);\n  const [displayLayerSelector, setDisplayLayerSelector] = React.useState(false);\n  const [displayZoneSelector, setDisplayZoneSelector] = React.useState(false);\n  const [displayLabels, setDisplayLabels] = React.useState(true);\n  const [displayFooter, setDisplayFooter] = React.useState(false);\n  const [mouseCoordinates, setMouseCoordinates] = React.useState({ lat: 1, lon: -1 });\n  const availableLayers = mapData[selectedMapId].categories;\n\n  const params = new URLSearchParams(window.location.search);\n  let initialMapPosition;\n  if (params.has('x') && params.has('y') && params.has('zoom')) {\n    initialMapPosition = {\n      lat: parseFloat(params.get('y')),\n      lon: parseFloat(params.get('x')),\n      zoom: parseFloat(params.get('zoom')),\n      poi: params.get('poi') || null,\n    };\n  }\n\n  const handleLayerSelectorUpdate = useCallback((newLayers) => {\n    setSelectedLayers(newLayers);\n  }, [selectedLayers, setSelectedLayers]);\n\n  const handleZoneSelectorUpdate = useCallback((data) => {\n    setSelectedMapId(data);\n\n    // Close selector\n    setDisplayZoneSelector(false);\n\n    // Update current href\n    window.history.pushState(\n      {},\n      'FFXIV Field Operations Assistant - forays.info',\n      `/map/${data}`,\n    );\n  }, [setSelectedMapId, setDisplayZoneSelector]);\n\n  const handleFooterSelectorUpdate = useCallback(() => {\n    setDisplayFooter(!displayFooter);\n  }, [displayFooter, setDisplayFooter]);\n\n  const handleMouseMove = useCallback((e) => {\n    setMouseCoordinates({ lat: e.latlng.lat, lon: e.latlng.lng });\n  }, [setMouseCoordinates]);\n\n  const displayMap = useMemo(() => (\n    <FullscreenMapComponent\n      mapId={selectedMapId}\n      mapData={mapData[selectedMapId].mapData}\n      mapParameters={mapData[selectedMapId].parameters}\n      initialMapPosition={initialMapPosition}\n      selectedLayers={selectedLayers}\n      displayLabels={displayLabels}\n      handleLayerSelectorUpdate={handleLayerSelectorUpdate}\n      handleMouseMove={handleMouseMove}\n    />\n  ), [displayLabels, selectedMapId, selectedLayers, handleLayerSelectorUpdate, handleMouseMove]);\n\n  return (\n    <Box\n      component=\"main\"\n      margin=\"auto\"\n      className=\"map-container\"\n      sx={{\n        height: { xs: 'calc(100dvh - 80px)', md: '100dvh' },\n      }}\n    >\n      { displayMap }\n      {\n        displayLayerSelector\n          && (\n          <MapLayerSelectorComponent\n            selectedLayers={selectedLayers}\n            availableLayers={availableLayers}\n            handleLayerSelectorUpdate={handleLayerSelectorUpdate}\n          />\n          )\n      }\n      {\n        displayZoneSelector\n          && (\n          <MapZoneSelectorComponent\n            currentZone={selectedMapId}\n            handleZoneSelectorUpdate={handleZoneSelectorUpdate}\n          />\n          )\n      }\n      <Box className=\"layer-selector-button\">\n        <Stack direction=\"row\" spacing={2}>\n          <Button\n            variant=\"contained\"\n            startIcon={displayLabels ? <CheckBoxIcon /> : <CheckBoxOutlineBlankIcon />}\n            endIcon={<AbcIcon />}\n            onClick={() => {\n              setDisplayLabels(!displayLabels);\n            }}\n          />\n          <Button\n            variant=\"contained\"\n            startIcon={displayZoneSelector ? <ExpandLessIcon /> : <ExpandMoreIcon />}\n            endIcon={<MapIcon />}\n            onClick={() => {\n              setDisplayZoneSelector(!displayZoneSelector);\n              setDisplayLayerSelector(false);\n            }}\n          >\n            <Typography\n              display={{ xs: 'none', md: 'block' }}\n            >\n              { mapData[selectedMapId].name }\n            </Typography>\n          </Button>\n          <Button\n            variant=\"contained\"\n            startIcon={displayLayerSelector ? <ExpandLessIcon /> : <ExpandMoreIcon />}\n            endIcon={<LayersIcon />}\n            onClick={() => {\n              setDisplayZoneSelector(false);\n              setDisplayLayerSelector(!displayLayerSelector);\n            }}\n          >\n            {\n              /* { displayLayerSelector ? 'Close' : 'Change Layers' } */\n              ''\n            }\n          </Button>\n        </Stack>\n      </Box>\n      <Box className=\"mouse-coordinates\" sx={{ backgroundColor: theme.palette.background.paper }}>\n        {`${mouseCoordinates.lon.toFixed(1)}, ${(mouseCoordinates.lat * -1.0).toFixed(1)}`}\n      </Box>\n      <Box className=\"map-footer\" sx={{ display: { xs: 'none', md: 'block' } }}>\n        <Stack direction=\"row\" spacing={3}>\n          { displayFooter\n            ? (\n              <Box className=\"map-footer-component\">\n                <FooterComponent includePadding={false} />\n              </Box>\n            )\n            : null }\n          <Fab onClick={handleFooterSelectorUpdate}>\n            { displayFooter ? <CancelIcon /> : <InfoIcon /> }\n          </Fab>\n        </Stack>\n\n      </Box>\n    </Box>\n  );\n}\n\n/**\n * Some notes on this:\n * - We'll need a layer selector. Probably also need a map switcher.\n * - Need to add support for regions as well as points, for CE/FATE boundaries and mob spawn areas.\n * - Need to make an inline version of this for the forecast/ section.\n */\n"],"names":["EurekaNMTooltipComponent","_ref","markerData","_jsxs","Stack","children","_jsx","Typography","variant","direction","alignItems","Box","src","concat","process","metadata","element","toLowerCase","alt","name","width","height","spawnedBy","level","AetheryteTooltipComponent","_markerData$metadata","unlock","BozjaCETooltipComponent","boss","type","rewards","map","reward","spacing","TooltipBaseComponent","_markerData$popupTitl","icon","className","fontWeight","popupTitle","my","Divider","light","sx","bgcolor","mb","renderContent","PopupHelper","markerRef","React","current","setTimeout","openPopup","LocationMarker","_ref2","handleMouseMove","useMapEvents","mousemove","e","moveend","center","getCenter","zoom","getZoom","params","URLSearchParams","window","location","search","set","lng","toFixed","lat","newUrl","pathname","toString","history","pushState","path","zoomend","popupopen","popup","options","id","popupclose","delete","FullscreenMapComponent","_ref3","mapData","mapParameters","displayLabels","selectedLayers","initialMapPosition","markers","annotations","useRef","polygonCoordinates","setPolygonCoordinates","useState","Object","keys","forEach","markerType","includes","push","waymarks","marker","Marker","position","y","x","ref","poi","L","iconUrl","iconOverride","markerIcon","iconSize","iconAnchor","popupAnchor","tooltipAnchor","Popup","m","Tooltip","permanent","circle","Circle","pathOptions","color","fillColor","fillOpacity","dashArray","radius","annotation","Polyline","positions","point","html","text","Polygon","initialMapSettings","lon","default","MapContainer","crs","Simple","minZoom","min","maxZoom","max","zoomDelta","delta","zoomSnap","snap","wheelPxPerZoomLevel","scrollPx","ImageOverlay","url","imageUrl","noWrap","bounds","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","shadowUrl","MapLayerSelectorComponent","availableLayers","handleLayerSelectorUpdate","theme","useTheme","checkboxesToDisplay","category","FormControlLabel","label","control","Checkbox","checked","layers","every","layer","indeterminate","some","disabled","enabled","onChange","newLayers","target","index","indexOf","splice","categoryLayers","display","flexDirection","ml","mt","xs","md","top","backgroundColor","palette","background","paper","Scrollbars","universal","FormGroup","MapZoneSelectorComponent","currentZone","handleZoneSelectorUpdate","RadioGroup","value","FormLabel","Radio","MapContainerComponent","mapId","inputSelectedLayers","hydatos","hydMapData","bsf","bsfMapData","southhorn","oshMapData","selectedMapId","setSelectedMapId","initialSelectedLayers","setSelectedLayers","displayLayerSelector","setDisplayLayerSelector","displayZoneSelector","setDisplayZoneSelector","setDisplayLabels","displayFooter","setDisplayFooter","mouseCoordinates","setMouseCoordinates","categories","has","parseFloat","get","useCallback","data","handleFooterSelectorUpdate","latlng","displayMap","useMemo","parameters","component","margin","Button","startIcon","CheckBoxIcon","CheckBoxOutlineBlankIcon","endIcon","AbcIcon","onClick","ExpandLessIcon","ExpandMoreIcon","MapIcon","LayersIcon","FooterComponent","includePadding","Fab","CancelIcon","InfoIcon"],"sourceRoot":""}