{"version":3,"file":"static/js/759.b6580bc8.chunk.js","mappings":"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","sources":["drs/create/DRSRunCreatorSingleHolsterComponent.jsx","drs/create/DRSRunHolsterCreatorComponent.jsx"],"sourcesContent":["import React, { useCallback } from 'react';\n\nimport Avatar from '@mui/material/Avatar';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport FormControl from '@mui/material/FormControl';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport MenuItem from '@mui/material/MenuItem';\nimport Paper from '@mui/material/Paper';\nimport Select from '@mui/material/Select';\nimport Stack from '@mui/material/Stack';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport DRSLostActionHelper from '../lib/DRSLostActionHelper';\n\nexport default function DRSRunCreatorSingleHolsterComponent({\n  holster, index, updateHolster, deleteHolster,\n}) {\n  const roles = [\n    'none',\n    'tank',\n    'healer',\n    'caster',\n    'melee',\n    'ranged',\n  ];\n\n  const lostActions = DRSLostActionHelper.getLostActions();\n  const lostActionKeys = Object.keys(lostActions);\n  const images = [];\n  images.push('None', 'Tank', 'Healer', 'Caster', 'Melee', 'Ranged');\n  for (let i = 0; i < lostActionKeys.length; i += 1) {\n    images.push(lostActions[lostActionKeys[i]].image);\n  }\n\n  const updateTag = useCallback((event) => {\n    updateHolster(index, {\n      tag: event.target.value,\n      name: holster.name,\n      role: holster.role,\n      icon: holster.icon,\n      explanation: holster.explanation,\n      pre: holster.pre,\n      main: holster.main,\n      link: holster.link,\n    });\n  }, [holster, index, updateHolster]);\n\n  const updateName = useCallback((event) => {\n    updateHolster(index, {\n      tag: holster.tag,\n      name: event.target.value,\n      role: holster.role,\n      icon: holster.icon,\n      explanation: holster.explanation,\n      pre: holster.pre,\n      main: holster.main,\n      link: holster.link,\n    });\n  }, [holster, index, updateHolster]);\n\n  const updateRole = useCallback((event) => {\n    updateHolster(index, {\n      tag: holster.tag,\n      name: holster.name,\n      role: event.target.value,\n      icon: holster.icon,\n      explanation: holster.explanation,\n      pre: holster.pre,\n      main: holster.main,\n      link: holster.link,\n    });\n  }, [holster, index, updateHolster]);\n\n  const updateIcon = useCallback((event) => {\n    updateHolster(index, {\n      tag: holster.tag,\n      name: holster.name,\n      role: holster.role,\n      icon: event.target.value,\n      explanation: holster.explanation,\n      pre: holster.pre,\n      main: holster.main,\n      link: holster.link,\n    });\n  }, [holster, index, updateHolster]);\n\n  const updateExplanation = useCallback((event) => {\n    updateHolster(index, {\n      tag: holster.tag,\n      name: holster.name,\n      role: holster.role,\n      icon: holster.icon,\n      explanation: event.target.value,\n      pre: holster.pre,\n      main: holster.main,\n      link: holster.link,\n    });\n  }, [holster, index, updateHolster]);\n\n  const updateHolsterLink = useCallback((event) => {\n    updateHolster(index, {\n      tag: holster.tag,\n      name: holster.name,\n      role: holster.role,\n      icon: holster.icon,\n      explanation: holster.explanation,\n      pre: holster.pre,\n      main: holster.main,\n      link: event.target.value,\n    });\n  }, [holster, index, updateHolster]);\n\n  return (\n    <Paper alignSelf=\"center\" elevation={3}>\n      <Stack alignItems=\"flex-start\" spacing={2} width={600} p={2}>\n        <Stack direction=\"row\" width=\"100%\">\n          <Typography variant=\"h6\">\n            Holster\n            {' '}\n            {index + 1}\n          </Typography>\n          <Box ml=\"auto\" />\n          <Button\n            variant=\"outlined\"\n            size=\"small\"\n            color=\"error\"\n            onClick={() => { deleteHolster(index); }}\n          >\n            Remove Holster\n          </Button>\n        </Stack>\n        <TextField\n          required\n          id={`holster-tag-${index}`}\n          label=\"Holster Tag\"\n          value={holster.tag}\n          fullWidth\n          helperText=\"A unique tag for this holster, containing only lowercase letters and dashes. This will be the URL of the holster after the host's name and run type (e.g. /lynn/anyprog/main-tank).\"\n          onChange={updateTag}\n        />\n        <TextField\n          required\n          id={`holster-name-${index}`}\n          label=\"Holster Name\"\n          value={holster.name}\n          fullWidth\n          helperText=\"The name for this specific holster. This name will be displayed on the Holster page.\"\n          onChange={updateName}\n        />\n        <FormControl fullWidth>\n          <Select\n            width={500}\n            label=\"Role\"\n            id={`holster-role-${index}`}\n            value={holster.role}\n            onChange={updateRole}\n            fullWidth\n          >\n            {\n              roles.map((i) => (\n                <MenuItem value={i}>\n                  <Stack direction=\"row\" spacing={2}>\n                    <Avatar sx={{ width: 24, height: 24 }} variant=\"rounded\" src={`${process.env.PUBLIC_URL}/assets/lostactions/${i}.jpg`} />\n                    <Typography>{i}</Typography>\n                  </Stack>\n                </MenuItem>\n              ))\n            }\n          </Select>\n          <FormHelperText>The role for this holster.</FormHelperText>\n        </FormControl>\n        <FormControl fullWidth>\n          <Select\n            width={500}\n            label=\"Icon\"\n            id={`holster-icon-${index}`}\n            value={holster.icon}\n            onChange={updateIcon}\n            fullWidth\n          >\n            {\n              images.map((i) => (\n                <MenuItem value={i}>\n                  <Stack direction=\"row\" spacing={2}>\n                    <Avatar sx={{ width: 24, height: 24 }} variant=\"rounded\" src={`${process.env.PUBLIC_URL}/assets/lostactions/${i}.jpg`} />\n                    <Typography>{i}</Typography>\n                  </Stack>\n                </MenuItem>\n              ))\n            }\n          </Select>\n          <FormHelperText>\n            The icon for this holster, displayed in the selection menu.\n          </FormHelperText>\n        </FormControl>\n        <TextField\n          id={`holster-explanation-${index}`}\n          label=\"Explanation\"\n          helperText=\"An explanation on how to use this holster. Can include instructions on when and how to use specific actions, and which actions to swap out if necessary.\"\n          value={holster.explanation}\n          onChange={updateExplanation}\n          fullWidth\n          multiline\n          rows={5}\n        />\n        <TextField\n          id={`holster-link-${index}`}\n          label=\"Custom Holster Link\"\n          helperText=\"A link to the holster you'd like to use, from the Holster Creator.\"\n          value={holster.link}\n          onChange={updateHolsterLink}\n          fullWidth\n        />\n      </Stack>\n    </Paper>\n  );\n}\n","import React, { useState, useCallback } from 'react';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport DRSRunCreatorSingleHolsterComponent from './DRSRunCreatorSingleHolsterComponent';\nimport DRSHolsterHelper from '../lib/DRSHolsterHelper';\n\nexport default function DRSRunHolsterCreatorComponent() {\n  const [runName, setRunName] = useState('Learning');\n  const [runOwner, setRunOwner] = useState(null);\n  const [runJson, setRunJson] = useState(null);\n  const [mappingJson, setMappingJson] = useState(null);\n\n  const [holsters, setHolsters] = useState(\n    [\n      {\n        tag: null,\n        name: null,\n        role: 'none',\n        icon: 'None',\n        explanation: null,\n        pre: null,\n        main: null,\n        link: null,\n      },\n    ],\n  );\n\n  const updateRunName = useCallback((event) => {\n    setRunName(event.target.value);\n  }, [setRunName]);\n\n  const updateRunOwner = useCallback((event) => {\n    setRunOwner(event.target.value);\n  }, [setRunOwner]);\n\n  const updateHolster = useCallback((index, newHolster) => {\n    const newHolsters = [...holsters];\n    newHolsters[index] = newHolster;\n    setHolsters(newHolsters);\n  }, [holsters, setHolsters]);\n\n  const addHolster = (() => {\n    const newHolsters = [...holsters];\n    newHolsters.push({\n      tag: null,\n      name: null,\n      role: 'none',\n      icon: 'None',\n      explanation: null,\n      pre: null,\n      main: null,\n      link: null,\n    });\n    setHolsters(newHolsters);\n  });\n\n  const deleteHolster = useCallback((index) => {\n    const newHolsters = [...holsters];\n    newHolsters.splice(index, 1);\n    setHolsters(newHolsters);\n  }, [holsters, setHolsters]);\n\n  const generateHolsterJson = useCallback(() => {\n    const outputHolsters = {};\n    const outputHolsterMapping = {\n      tank: {\n        name: 'Tank',\n        holsters: [],\n      },\n      healer: {\n        name: 'Healer',\n        holsters: [],\n      },\n      melee: {\n        name: 'Melee',\n        holsters: [],\n      },\n      caster: {\n        name: 'Caster',\n        holsters: [],\n      },\n      ranged: {\n        name: 'Physical Ranged',\n        holsters: [],\n      },\n    };\n\n    for (let i = 0; i < holsters.length; i += 1) {\n      const currentHolster = holsters[i];\n      const currentHolsterTag = currentHolster.tag;\n      const encodedHolsterUrl = new URL(currentHolster.link).pathname.split('/');\n      const encodedHolsterString = encodedHolsterUrl[encodedHolsterUrl.length - 1];\n      const decodedHolsters = DRSHolsterHelper.decodeHolster(encodedHolsterString);\n      outputHolsters[currentHolsterTag] = {\n        name: currentHolster.name,\n        role: currentHolster.role,\n        icon: currentHolster.icon,\n        explanation: currentHolster.explanation,\n        pre: decodedHolsters.prepop,\n        main: decodedHolsters.main,\n      };\n      outputHolsterMapping[currentHolster.role.toLowerCase()].holsters.push(currentHolsterTag);\n    }\n\n    const output = {\n      name: runName,\n      owner: runOwner,\n      holsters: outputHolsters,\n    };\n\n    const mappingOutput = {\n      name: runName,\n      owner: runOwner,\n      roles: outputHolsterMapping,\n    };\n    setRunJson(`\\`\\`\\`json\\n${JSON.stringify(output, null, 2)}\\n\\`\\`\\``);\n    setMappingJson(`\\`\\`\\`json\\n${JSON.stringify(mappingOutput, null, 2)}\\n\\`\\`\\``);\n  }, [runName, runOwner, holsters, setRunJson, setMappingJson]);\n\n  return (\n    <Box\n      component=\"main\"\n      margin=\"auto\"\n      sx={{ flexGrow: 1, pt: { xs: 14, md: 5 } }}\n      pl={5}\n    >\n      <Stack spacing={2} alignItems=\"center\" width={600}>\n        <Typography variant=\"h4\" fontWeight={700}>DRS Run Holster Creator</Typography>\n        <Typography textAlign=\"left\">\n          This tool creates the JSON required to add a new run&apos;s holsters to the\n          DRS Holsters section of the site. Any DRS host can add their holsters to the site.\n        </Typography>\n        <Typography textAlign=\"left\">\n          Use the\n          {' '}\n          <a\n            href=\"/drs/holster/c\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Holster Creator\n          </a>\n          {' '}\n          to create a bag for each holster. On the Holster Creator\n          page, click &quot;Create Link&quot;, then copy that URL into the &quot;Custom Holster\n          Link&quot; field.\n        </Typography>\n        <Typography textAlign=\"left\">\n          After creating your holsters, click Generate Holster JSON. Send both fields to\n          @lynnkaneko on Discord for them to be added to the site.  In order to edit holsters, use\n          this tool to re-create the holsters you&apos;d like to change, and send the changes\n          to Lynn.\n        </Typography>\n        <Box minWidth={600} maxWidth={1600} minHeight={600} pt={2}>\n          <Stack alignItems=\"flex-start\" spacing={2} width={600}>\n            <TextField\n              required\n              id=\"run-name\"\n              label=\"Run Name\"\n              defaultValue=\"Learning\"\n              onChange={updateRunName}\n              fullWidth\n              helperText=\"This name identifies what type of run these holsters are for.\"\n            />\n            <TextField\n              required\n              id=\"run-owner\"\n              label=\"Host\"\n              onChange={updateRunOwner}\n              fullWidth\n              helperText=\"The person hosting this DRS run.\"\n            />\n            {\n              holsters.map((i, index) => (\n                <Box width={600} alignSelf=\"center\" pt={2}>\n                  <DRSRunCreatorSingleHolsterComponent\n                    holster={i}\n                    index={index}\n                    updateHolster={updateHolster}\n                    deleteHolster={deleteHolster}\n                  />\n                </Box>\n              ))\n            }\n            <Button variant=\"outlined\" onClick={addHolster} pt={2}>Add Holster</Button>\n            <Button variant=\"outlined\" onClick={generateHolsterJson} pt={2}>Generate Holster JSON</Button>\n            {\n              runJson\n                ? (\n                  <Box width={600}>\n                    <Stack>\n                      <Typography pt={2}>Add to Holsters.json</Typography>\n                      <TextField\n                        multiline\n                        rows={12}\n                        value={runJson}\n                        width={600}\n                        fullWidth\n                      />\n                      <Typography pt={2}>Add to HolsterMapping.json</Typography>\n                      <TextField\n                        multiline\n                        rows={12}\n                        value={mappingJson}\n                        width={600}\n                        fullWidth\n                      />\n                    </Stack>\n                  </Box>\n                )\n                : null\n            }\n          </Stack>\n        </Box>\n      </Stack>\n    </Box>\n  );\n}\n"],"names":["DRSRunCreatorSingleHolsterComponent","_ref","holster","index","updateHolster","deleteHolster","lostActions","DRSLostActionHelper","getLostActions","lostActionKeys","Object","keys","images","push","i","length","image","updateTag","useCallback","event","tag","target","value","name","role","icon","explanation","pre","main","link","updateName","updateRole","updateIcon","updateExplanation","updateHolsterLink","_jsx","Paper","alignSelf","elevation","children","_jsxs","Stack","alignItems","spacing","width","p","direction","Typography","variant","Box","ml","Button","size","color","onClick","TextField","required","id","concat","label","fullWidth","helperText","onChange","FormControl","Select","map","MenuItem","Avatar","sx","height","src","process","FormHelperText","multiline","rows","DRSRunHolsterCreatorComponent","runName","setRunName","useState","runOwner","setRunOwner","runJson","setRunJson","mappingJson","setMappingJson","holsters","setHolsters","updateRunName","updateRunOwner","newHolster","newHolsters","splice","generateHolsterJson","outputHolsters","outputHolsterMapping","tank","healer","melee","caster","ranged","currentHolster","currentHolsterTag","encodedHolsterUrl","URL","pathname","split","encodedHolsterString","decodedHolsters","DRSHolsterHelper","decodeHolster","prepop","toLowerCase","output","owner","mappingOutput","roles","JSON","stringify","component","margin","flexGrow","pt","xs","md","pl","fontWeight","textAlign","href","rel","minWidth","maxWidth","minHeight","defaultValue","addHolster"],"sourceRoot":""}