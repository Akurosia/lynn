{"version":3,"file":"static/js/86.2849ac6c.chunk.js","mappings":"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","sources":["../node_modules/underscore/modules/findIndex.js","../node_modules/underscore/modules/_createPredicateIndexFinder.js","ba/BANewLogosRecommenderWorkflow.jsx","ba/BAMainContentComponent.jsx"],"sourcesContent":["import createPredicateIndexFinder from './_createPredicateIndexFinder.js';\n\n// Returns the first index on an array-like that passes a truth test.\nexport default createPredicateIndexFinder(1);\n","import cb from './_cb.js';\nimport getLength from './_getLength.js';\n\n// Internal function to generate `_.findIndex` and `_.findLastIndex`.\nexport default function createPredicateIndexFinder(dir) {\n  return function(array, predicate, context) {\n    predicate = cb(predicate, context);\n    var length = getLength(array);\n    var index = dir > 0 ? 0 : length - 1;\n    for (; index >= 0 && index < length; index += dir) {\n      if (predicate(array[index], index, array)) return index;\n    }\n    return -1;\n  };\n}\n","import React, { useCallback } from 'react';\n\nimport Avatar from '@mui/material/Avatar';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Divider from '@mui/material/Divider';\nimport Stack from '@mui/material/Stack';\nimport Step from '@mui/material/Step';\nimport StepContent from '@mui/material/StepContent';\nimport StepLabel from '@mui/material/StepLabel';\nimport Stepper from '@mui/material/Stepper';\nimport Typography from '@mui/material/Typography';\nimport findIndex from 'underscore/modules/findIndex';\nimport RestartAltIcon from '@mui/icons-material/RestartAlt';\nimport ArrowBackIosNewIcon from '@mui/icons-material/ArrowBackIosNew';\n\nimport recommendedActionsJson from './lib/RecommendedActions.json';\nimport BALogosHolsterComponent from './BALogosHolsterComponent';\n\nconst steps = [\n  {\n    label: 'Select role',\n    completedLabelStart: 'Role: ',\n    description: 'What role are you entering BA as?',\n  },\n  {\n    label: 'Select loadout',\n    completedLabelStart: 'Loadout: ',\n    description: 'Next, pick a loadout. If you\\'re new, select First Timer.',\n  },\n];\n\nexport default function BANewLogosRecommenderWorkflow({\n  holster,\n}) {\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [role, setRole] = React.useState(null);\n  const [tray, setTray] = React.useState(null);\n  const [firstHolster, setFirstHolster] = React.useState(holster);\n  // const [resetTimerState, setResetTimerState] = React.useState(resetTimer);\n  // const [showStepper, setShowStepper] = React.useState(true);\n\n  const recommendedActions = recommendedActionsJson.actions;\n  const roles = Object.keys(recommendedActions);\n\n  // if (resetTimer !== resetTimerState) {\n  //  setActiveStep(0);\n  //  setRole(null);\n  //  setTray(null);\n  //  setResetTimerState(resetTimer);\n  // }\n\n  const handleNext = useCallback((e, data) => {\n    if (data.role) {\n      setRole(data.role);\n    }\n    if (data.tray) {\n      setTray(data.tray);\n    }\n    if (data.role && data.tray) {\n      const trayId = findIndex(recommendedActions[data.role].trays, { title: data.tray });\n      const trayUri = recommendedActions[data.role].trays[trayId].uri;\n      window.history.pushState(\n        {},\n        'FFXIV Field Operations Assistant - forays.info',\n        `/ba/${data.role}/${trayUri}`,\n      );\n    }\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  }, [setRole, setTray, setActiveStep]);\n\n  if (holster && firstHolster && firstHolster.role && activeStep === 0) {\n    // A holster was passed in. Advance the stepper to the last step, and populate all data.\n    const trayId = findIndex(recommendedActions[holster.role].trays, { uri: holster.tray });\n    // const selectedHolsterData = recommendedActions[holster.role].trays[trayId];\n    setActiveStep(2);\n    setRole(holster.role);\n    setTray(recommendedActions[holster.role].trays[trayId].title);\n    // setShowStepper(true);\n  }\n\n  const handleReset = useCallback(() => {\n    setActiveStep(0);\n    setRole(null);\n    setTray(null);\n    setFirstHolster(null);\n    window.history.pushState(\n      {},\n      'FFXIV Field Operations Assistant - forays.info',\n      '/ba',\n    );\n  }, [setRole, setTray, setActiveStep]);\n\n  const handleBack = useCallback(() => {\n    switch (activeStep) {\n      case 1: setRole(null); setFirstHolster(null); break;\n      case 2: setTray(null); break;\n      default:\n    }\n\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    window.history.pushState(\n      {},\n      'FFXIV Field Operations Assistant - forays.info',\n      '/ba',\n    );\n  });\n\n  const displayBackButton = () => (\n    <Stack direction=\"row\" spacing={2}>\n      <Box>\n        <Button\n          variant=\"outlined\"\n          size=\"large\"\n          startIcon={<RestartAltIcon />}\n          onClick={handleReset}\n        >\n          Start Over\n        </Button>\n      </Box>\n      {tray && tray.name\n        ? null\n        : (\n          <Box>\n            <Button\n              variant=\"outlined\"\n              size=\"large\"\n              startIcon={<ArrowBackIosNewIcon />}\n              onClick={handleBack}\n            >\n              Back\n            </Button>\n          </Box>\n        )}\n    </Stack>\n  );\n\n  let trays;\n  if (role) {\n    trays = recommendedActions[role].trays;\n  }\n\n  const trayId = role && tray ? findIndex(recommendedActions[role].trays, { title: tray }) : -1;\n\n  function getStepLabel(step, index) {\n    if (activeStep > 0 && index === 0) {\n      return `${step.completedLabelStart} ${recommendedActions[role].name}`;\n    }\n    if (activeStep > 1 && index === 1) {\n      return `${step.completedLabelStart} ${trays[trayId].title}`;\n    }\n    return step.label;\n  }\n\n  const displayStepper = (() => (\n    <Stepper activeStep={activeStep} orientation=\"vertical\">\n      {steps.map((step, index) => (\n        <Step key={step.label}>\n          <StepLabel>\n            {getStepLabel(step, index)}\n          </StepLabel>\n          <StepContent>\n            <Typography textAlign=\"left\" fontSize={20} pb={2}>{step.description}</Typography>\n            {activeStep === 0\n              ? (\n                <Stack spacing={2} width=\"100%\">\n                  {roles.map((item) => (\n                    <Box key={`rolewf-${item}`}>\n                      <Button\n                        fullWidth\n                        variant=\"outlined\"\n                        size=\"large\"\n                        onClick={(e) => handleNext(e, { role: item })}\n                        startIcon={\n                          <Avatar src={`${process.env.PUBLIC_URL}/assets/roles/${item}.png`} />\n                        }\n                      >\n                        {recommendedActions[item].name}\n                      </Button>\n                    </Box>\n                  ))}\n                </Stack>\n              )\n              : null}\n            {\n              activeStep === 1\n                ? (\n                  <Stack spacing={2} width=\"100%\">\n                    {trays.map((item) => (\n                      <Box key={`baloadout-${item.title}`}>\n                        <Button\n                          fullWidth\n                          variant=\"outlined\"\n                          size=\"large\"\n                          onClick={(e) => handleNext(e, { role, tray: item.title })}\n                          startIcon={(\n                            <Avatar\n                              src={`${process.env.PUBLIC_URL}/assets/logosactions/${item.buttonIcon}.png`}\n                            />\n                          )}\n                        >\n                          {item.title}\n                        </Button>\n                        <Typography variant=\"caption\">{item.subtitle}</Typography>\n                      </Box>\n                    ))}\n                  </Stack>\n                )\n                : null\n            }\n          </StepContent>\n        </Step>\n      ))}\n    </Stepper>\n  ));\n\n  return (\n    <Box maxWidth={1600} minHeight={600} mt=\"30px\" ml=\"auto\" mr=\"auto\" pb=\"10px\">\n      {displayStepper()}\n      {activeStep > 0\n        ? displayBackButton()\n        : null}\n      {activeStep === steps.length\n        ? (\n          <Box className=\"BALogogramWorkflowContainer\">\n            <Stack alignItems=\"center\" spacing={2}>\n              <Typography variant=\"h4\">Here are your recommended logos actions!</Typography>\n              <Box maxWidth={600}>\n                <Typography>\n                  You can build these at a Logos Manipulator. Pop and activate your Spirit of\n                  the Remembered action before you zone in to the Baldesion Arsenal, then pop your\n                  Initial plate. Plates 1-6 go in your action tray, and will be used as you\n                  progress through the Arsenal.\n                </Typography>\n              </Box>\n              <Divider />\n              <BALogosHolsterComponent tray={recommendedActions[role].trays[trayId]} />\n            </Stack>\n          </Box>\n        )\n        : null}\n    </Box>\n  );\n}\n","import React from 'react';\n\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport BANewLogosRecommenderWorkflow from './BANewLogosRecommenderWorkflow';\n\nexport default function BAMainContentComponent({\n  holster,\n  encodedHolster,\n  resetTimer,\n}) {\n  /**\n   * Render Logic\n   */\n\n  return (\n    <Stack>\n      <Typography variant=\"h4\" fontWeight={700}>BA Logos Action Helper</Typography>\n      <BANewLogosRecommenderWorkflow\n        holster={holster}\n        encodedHolster={encodedHolster}\n        resetTimer={resetTimer}\n      />\n    </Stack>\n  );\n}\n"],"names":["dir","array","predicate","context","cb","length","getLength","index","steps","label","completedLabelStart","description","BANewLogosRecommenderWorkflow","_ref","holster","activeStep","setActiveStep","React","role","setRole","tray","setTray","firstHolster","setFirstHolster","recommendedActions","recommendedActionsJson","roles","Object","keys","handleNext","useCallback","e","data","trayId","findIndex","trays","title","trayUri","uri","window","history","pushState","concat","prevActiveStep","handleReset","handleBack","getStepLabel","step","name","_jsxs","Box","maxWidth","minHeight","mt","ml","mr","pb","children","_jsx","Stepper","orientation","map","Step","StepLabel","StepContent","Typography","textAlign","fontSize","Stack","spacing","width","item","Button","fullWidth","variant","size","onClick","startIcon","Avatar","src","process","buttonIcon","subtitle","direction","RestartAltIcon","ArrowBackIosNewIcon","className","alignItems","Divider","BALogosHolsterComponent","BAMainContentComponent","encodedHolster","resetTimer","fontWeight"],"sourceRoot":""}